version: '3.8'

services:
  postgres-building:
    image: postgres:14
    container_name: postgres_building
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: buildingdb
    volumes:
      - postgres_building_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  postgres-audience:
    image: postgres:14
    container_name: postgres_audience
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: audiencedb
    volumes:
      - postgres_audience_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  building-service:
    build:
      context: ./BuildingService
      dockerfile: BuildingService.Api/Dockerfile
    container_name: building_service
    depends_on:
      - postgres-building
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-building;Database=buildingdb;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
    ports:
      - "5000:80"

  audience-service:
    build:
      context: ./AudienceService
      dockerfile: AudienceService.Api/Dockerfile
    container_name: audience_service
    depends_on:
      - postgres-audience
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-audience;Database=audiencedb;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
    ports:
      - "5001:80"

  frontend:
    build:
      context: ./BuildingAndAudienceApp
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"

volumes:
  postgres_building_data:
  postgres_audience_data: